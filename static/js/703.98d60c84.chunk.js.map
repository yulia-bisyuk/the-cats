{"version":3,"file":"static/js/703.98d60c84.chunk.js","mappings":"yOAGMA,EAAcC,EAAAA,GAAAA,IAAH,gJAQXC,EAAYD,EAAAA,GAAAA,MAAH,0PAWTE,EAAYF,EAAAA,GAAAA,KAAH,yNAUTG,EAAYH,EAAAA,GAAAA,MAAH,iQAOF,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,qBAW5BC,EAAYP,EAAAA,GAAAA,OAAH,gKAMO,SAAAI,GAAK,OAAIA,EAAMC,MAAMG,aAErCC,GAAeT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,mL,SCIlB,EA1DmB,SAAC,GAAkB,IAAjBW,EAAgB,EAAhBA,WAOjB,OACI,UAACZ,EAAD,YACR,SAAC,KAAD,CACMa,cAAe,CAAEC,UAAW,IAC5BC,SAAU,SAACC,EAAQC,GAAT,OATS,SAACD,EAAD,GAA4B,IAAjBE,EAAgB,EAAhBA,UAC5BN,EAAWI,GACXE,IAO6BC,CAAaH,EAAQC,IAF1D,SAIO,SAAAG,GAAM,OACL,UAACjB,EAAD,CAAWY,SAAUK,EAAOD,aAA5B,WACE,SAACjB,EAAD,CAAWmB,QAAQ,YAAnB,+BAEG,SAACjB,GAAD,QACCkB,GAAG,YACHC,KAAK,YACLC,KAAK,OACLC,YAAY,6BACRL,EAAOM,cAAc,gBAGxB,SAAClB,EAAD,CAAWgB,KAAK,SAAhB,UACK,gBAAKG,MAAM,KAAKC,OAAO,KAAvB,UACd,gBAAKC,KAAMC,EAAAA,EAAS,+BAUrB,SAACpB,EAAD,CAAcqB,GAAG,IAAjB,UACD,gBAAKJ,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKC,KAAMC,EAAAA,EAAS,uBAItB,SAACpB,EAAD,CAAcqB,GAAG,IAAjB,UACA,gBAAKJ,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKC,KAAMC,EAAAA,EAAS,iCAItB,SAACpB,EAAD,CAAcqB,GAAG,IAAjB,UACA,gBAAKJ,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKC,KAAMC,EAAAA,EAAS,6B,oCCrDpBE,EAAe/B,EAAAA,GAAAA,IAAH,uIAQZgC,EAA0BhC,EAAAA,GAAAA,IAAH,0ECRvBiC,EAAgBjC,EAAAA,GAAAA,IAAH,mLAMG,SAAAI,GAAK,OAAIA,EAAMC,MAAM6B,oBC6C3C,EA9CkB,WAClB,OAA2CC,EAAAA,EAAAA,MAA9BC,EAAb,EAAOC,KAAWC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,WAC7B,GAAeC,EAAAA,EAAAA,MAARC,GAAP,eACA,GAAcC,EAAAA,EAAAA,KAAPC,GAAP,eACAC,QAAQC,IAAIT,GAEZ,IAAMU,EAAMR,EAAYF,EAAI,GAAGU,IAAMC,EAE/BC,EAAWV,EAAYW,KAAKC,UAAU,CACxCC,SAAUf,EAAI,GAAGf,GACjB+B,MAAO,IACN,KAWD,OAVJR,QAAQC,IAAIG,IAWZ,UAAChB,EAAD,YACO,SAAC,EAAD,KACC,UAACD,EAAD,YACR,yCACA,mBAAQsB,QAAS,kBAAMC,OAAOC,SAASC,QAAO,IAA9C,oBACCjB,GACD,SAACN,EAAD,WAAe,SAAC,IAAD,CAAYwB,MAAM,UAAUC,KAAK,YAC1C,gBAAKC,IAAKb,EAAKc,IAAI,aAAalC,MAAM,QAAQC,OAAO,UAEnDW,IAAa,4BACb,mBAAQe,QAAS,kBAAMZ,EAAK,CAAC,SAAW,GAAX,OAAcL,EAAI,GAAGf,IAAK,MAAQ,KAA/D,mBACA,mBAAQgC,QAAS,kBAAMV,EAAI,CAAC,SAAW,GAAX,OAAcP,EAAI,GAAGf,OAAjD,yBACA,mBAAQgC,QAAS,kBAAMZ,EAAK,CAAC,SAAW,GAAX,OAAcL,EAAI,GAAGf,IAAK,MAAQ,KAA/D,gC","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","constants/common-styles.js","pages/VotingPage/VotingPage.styled.js","pages/VotingPage/VotingPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst FormWrapper = styled.div`\n  width: 680px;\n  margin-bottom: 10px;\n  display: flex;\n  align-content: center;\n  justify-content: space-between;\n`;\n\nconst FormLabel = styled.label`\n  position: absolute !important;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  padding: 0 !important;\n  border: 0 !important;\n  height: 1px !important;\n  width: 1px !important;\n  overflow: hidden;\n`;\n\nconst FormField = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 470px;\n  height: 60px;\n  border-radius: 20px;\n  border-color: transparent;\n  background-color: white;\n`;\nconst FormInput = styled.input`\n  margin-left: 15px;\n  border: none;\n  width: 240px;\n  height: 25px;\n\n  ::placeholder {\n    color: ${props => props.theme.lightGrayTxtColor};\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 1.5;\n  }\n  :active,\n  :focus {\n    outline: none;\n  }\n`;\n\nconst SubmitBtn = styled.button`\n  width: 40px;\n  height: 40px;\n  margin-right: 15px;\n  border-radius: 10px;\n  border-color: transparent;\n  background-color: ${props => props.theme.lightPink};\n`;\nconst ReactionLink = styled(Link)`\n  width: 60px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 20px;\n  background-color: white;\n`;\n\nexport {\n  FormWrapper,\n  FormLabel,\n  FormInput,\n  FormField,\n  SubmitBtn,\n  ReactionLink,\n};\n","import { Formik } from 'formik';\nimport sprite from '../../icons/sprite.svg';\nimport { FormWrapper, FormLabel, FormInput, FormField, SubmitBtn, ReactionLink } from './SearchForm.styled';\n\nconst SearchForm = ({formSubmit}) => {\n\n    const handleSubmit = (values, { resetForm }) => {\n        formSubmit(values);\n        resetForm();\n    }\n\n    return(\n        <FormWrapper>\n<Formik\n      initialValues={{ breedName: '' }}\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n    >\n      {formik => (\n        <FormField onSubmit={formik.handleSubmit}>\n          <FormLabel htmlFor='breedName'>\n            Sarch for breeds</FormLabel>\n             <FormInput\n              id=\"breedName\"\n              name=\"breedName\"\n              type=\"text\"\n              placeholder='Search for breeds by name'\n              {...formik.getFieldProps('breedName')}\n            \n          />\n               <SubmitBtn type=\"submit\">\n                    <svg width=\"20\" height=\"20\" >\n      <use href={sprite + '#icon-search-20'} />\n    </svg></SubmitBtn>\n           \n            {/* {formik.touched.breedName && formik.errors.breedName ? (\n              <ErrorMessage>{formik.errors.breedName}</ErrorMessage>\n            ) : null} */}\n         \n        </FormField>\n      )}\n    </Formik>\n     <ReactionLink to='/'>\n    <svg width=\"30\" height=\"30\">\n      <use href={sprite + '#icon-like-30'} />\n    </svg>\n    </ReactionLink>\n\n    <ReactionLink to='/'>\n    <svg width=\"30\" height=\"30\" >\n      <use href={sprite + '#icon-Vector-348-Stroke'} />\n    </svg>\n    </ReactionLink>\n\n    <ReactionLink to='/'>\n    <svg width=\"30\" height=\"30\">\n      <use href={sprite + '#icon-dislike-30'} />\n    </svg>\n    </ReactionLink>\n    </FormWrapper>\n    )\n};\n\nexport default SearchForm;","import styled from 'styled-components';\n\nconst PagesWrapper = styled.div`\n  width: 680px;\n  height: fit-content;\n  padding: 20px;\n  background-color: white;\n  border-radius: 20px;\n`;\n\nconst PagesPositioningWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 730px;\n`;\n\nexport { PagesWrapper, PagesPositioningWrapper };\n","import styled from 'styled-components';\n\nconst LoaderWrapper = styled.div`\n  width: 640px;\n  height: 360px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.theme.lightGreyBgColor};\n  border-radius: 20px;\n`;\nexport { LoaderWrapper };\n","import SearchForm from \"components/SearchForm\";\nimport dummy from '../images/upload-bg.png';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useAddToFavouritesMutation, useFetchRandomCatQuery, useVotingMutation } from \"redux/catsApi\";\nimport {PagesWrapper,  PagesPositioningWrapper} from '../../constants/common-styles';\nimport { LoaderWrapper } from \"./VotingPage.styled\";\n\nconst VotingPage =() => {\nconst {data: cat, isSuccess, isFetching} = useFetchRandomCatQuery();\nconst [vote] = useVotingMutation();\nconst [add] = useAddToFavouritesMutation();\nconsole.log(cat);\n\nconst url = isSuccess ? cat[0].url : dummy;\n\nconst positive = isSuccess ? JSON.stringify({\n    image_id: cat[0].id, \n    value: 1 \n}) : null;\nconsole.log(positive);\n// const negative = JSON.stringify({\n//     image_id: cat[0].id, \n//     value: 0\n// });\n\n\n\n    // console.log('VotingPage fetchResult', cat[0].url);\n\n    return(\n<PagesPositioningWrapper>\n       <SearchForm />\n        <PagesWrapper>\n<button>Go back</button>\n<button onClick={() => window.location.reload(false)}>Voting</button>\n{isFetching ? \n<LoaderWrapper><ClipLoader color='#FF868E' size='60px'/></LoaderWrapper> \n    : <img src={url} alt=\"random cat\" width=\"640px\" height=\"360px\"/>}\n    {\n        isSuccess && <div>\n        <button onClick={() => vote({\"image_id\":`${cat[0].id}`,\"value\":1})}>Like</button>\n        <button onClick={() => add({\"image_id\":`${cat[0].id}`})}>Favourites</button>\n        <button onClick={() => vote({\"image_id\":`${cat[0].id}`,\"value\":0})}>Dislike</button>\n    </div>\n    }\n    \n\n        </PagesWrapper>\n        </PagesPositioningWrapper>\n      \n    )\n};\n\nexport default VotingPage;"],"names":["FormWrapper","styled","FormLabel","FormField","FormInput","props","theme","lightGrayTxtColor","SubmitBtn","lightPink","ReactionLink","Link","formSubmit","initialValues","breedName","onSubmit","values","actions","resetForm","handleSubmit","formik","htmlFor","id","name","type","placeholder","getFieldProps","width","height","href","sprite","to","PagesWrapper","PagesPositioningWrapper","LoaderWrapper","lightGreyBgColor","useFetchRandomCatQuery","cat","data","isSuccess","isFetching","useVotingMutation","vote","useAddToFavouritesMutation","add","console","log","url","dummy","positive","JSON","stringify","image_id","value","onClick","window","location","reload","color","size","src","alt"],"sourceRoot":""}