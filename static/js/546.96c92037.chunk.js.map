{"version":3,"file":"static/js/546.96c92037.chunk.js","mappings":"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","sources":["pages/FavouritesPage/FavouritesPage.styled.js","pages/FavouritesPage/FavPageImageHoverContent.jsx","pages/BreedsPage/BreedsPageHoverContent.jsx","components/Gallery/dynamicGridStyles.js","components/Gallery/Gallery.styled.js","components/Gallery/Gallery.jsx","components/Logger/Logger.styled.js","components/Logger/Logger.jsx","pages/BreedsPage/BreedsPage.styled.js","components/Modal/Modal.jsx","pages/GalleryPage/SelectOptions.js","pages/GalleryPage/GalleryPage.jsx","pages/GalleryPage/GalleryPage.styled.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst DeleteFavouriteButton = styled.button`\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  border-color: transparent;\n  background-color: white;\n  cursor: pointer;\n`;\nexport { DeleteFavouriteButton };\n","import { DeleteFavouriteButton } from \"./FavouritesPage.styled\";\nimport sprite from \"../../icons/sprite.svg\";\nimport { useState } from \"react\";\n\nconst FavPageImageHoverContent = ({ onClick }) => {\n  const [isHovered, setIsHovered] = useState(false);\n  return (\n    <>\n      <DeleteFavouriteButton\n        onClick={onClick}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        {isHovered ? (\n          <svg width=\"20\" height=\"20\">\n            <use href={sprite + \"#icon-fav-20\"} />\n          </svg>\n        ) : (\n          <svg width=\"20\" height=\"20\">\n            <use href={sprite + \"#icon-fav-color-20\"} />\n          </svg>\n        )}\n      </DeleteFavouriteButton>\n    </>\n  );\n};\n\nexport default FavPageImageHoverContent;\n","import { useNavigate } from \"react-router-dom\";\nimport { BreedButton } from \"./BreedsPage.styled\";\n\nconst BreedsPageHoverContent = ({ breed }) => {\n  const navigate = useNavigate();\n\n  return <BreedButton onClick={() => {\n      navigate('/info');\n      localStorage.setItem('selectedBreed', JSON.stringify(breed));\n\n}}>{breed.name}</BreedButton>;\n};\n\nexport default BreedsPageHoverContent;\n","export const columnStyle = (index) => {\n  let column;\n  if (index === 3 || index === 8 || index === 13 || index === 18) {\n    column = \"span 2\";\n  } else {\n    column = null;\n  }\n\n  return column;\n};\n\nexport const rowStyle = (index) => {\n  let row;\n  if (\n    index === 0 ||\n    index === 3 ||\n    index === 7 ||\n    index === 8 ||\n    index === 10 ||\n    index === 13 ||\n    index === 17 ||\n    index === 18\n  ) {\n    row = \"span 2\";\n  } else {\n    row = null;\n  }\n\n  return row;\n};\n","import styled from \"styled-components\";\n\nconst GalleryList = styled.ul`\n  height: fit-content;\n\n  padding-left: 0px;\n  margin-top: 0px;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(3, 210px);\n    grid-auto-rows: 140px;\n    gap: 20px;\n  }\n  @media (min-width: 1440px) {\n    grid-template-columns: repeat(3, 200px);\n  }\n`;\n\nconst GalleryListItem = styled.li`\n  height: 206px;\n  margin-top: 10px;\n  list-style-type: none;\n  position: relative;\n\n  @media (min-width: 768px) {\n    height: auto;\n    margin-top: 0;\n  }\n`;\n\nconst ListItemImage = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 20px;\n  object-fit: cover;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  background-color: rgba(255, 134, 142, 0.6);\n  transform: translateY(100%);\n  opacity: 0;\n`;\n\nconst Notification = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  height: 60px;\n  border-radius: 10px;\n  background-color: ${(props) => props.theme.lightGreyBgColor};\n`;\nconst NotificationText = styled.span`\n  margin-left: 20px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${(props) => props.theme.lightGrayTxtColor};\n`;\n\nexport {\n  GalleryList,\n  GalleryListItem,\n  ListItemImage,\n  Overlay,\n  Notification,\n  NotificationText,\n};\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport useMediaQuery from \"hooks/useMediaQuery\";\nimport {\n  useDeleteFromFavouritesMutation,\n  useAddToFavouritesMutation,\n} from \"redux/catsApi\";\nimport { Logger } from \"components/Logger/Logger\";\nimport FavPageImageHoverContent from \"pages/FavouritesPage/FavPageImageHoverContent\";\nimport BreedsPageHoverContent from \"pages/BreedsPage/BreedsPageHoverContent\";\nimport { columnStyle, rowStyle } from \"./dynamicGridStyles\";\nimport {\n  GalleryList,\n  GalleryListItem,\n  ListItemImage,\n  Overlay,\n  Notification,\n  NotificationText,\n} from \"./Gallery.styled\";\n\nconst Gallery = ({ items }) => {\n  const location = useLocation();\n  const [remove] = useDeleteFromFavouritesMutation();\n  const [add] = useAddToFavouritesMutation();\n  const [hovered, setHovered] = useState(false);\n  const [hoveredImageId, setHoveredImageId] = useState(null);\n  const [removeLogs, setRemoveLogs] = useState(\n    JSON.parse(window.localStorage.getItem(\"removeLogs\")) || []\n  );\n  const isDesktop = useMediaQuery(\"(min-width: 768px)\");\n\n  const activityLogger = (id, type) => {\n    const date = new Date().toTimeString().slice(0, 5);\n\n    setRemoveLogs((prevState) => [\n      ...prevState,\n      { imageId: id, type: type, time: date },\n    ]);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem(\"removeLogs\", JSON.stringify(removeLogs));\n    if (removeLogs.length > 20) window.localStorage.clear();\n  }, [removeLogs]);\n\n  return (\n    <>\n      {items && items.length === 0 ? (\n        <Notification>\n          <NotificationText>No items found</NotificationText>\n        </Notification>\n      ) : (\n        <GalleryList>\n          {items &&\n            items.map((item, index) => (\n              <GalleryListItem\n                key={index}\n                style={{\n                  gridColumn: isDesktop ? columnStyle(index) : null,\n                  gridRow: isDesktop ? rowStyle(index) : null,\n                }}\n              >\n                <ListItemImage\n                  src={item.url || item.image.url}\n                  alt=\"cat\"\n                  onMouseOver={() => {\n                    setHovered(true);\n                    setHoveredImageId(item.id);\n                  }}\n                />\n                {hovered &&\n                  hoveredImageId === item.id &&\n                  location.pathname !== \"/likes\" &&\n                  location.pathname !== \"/dislikes\" && (\n                    <Overlay\n                      style={{ opacity: \"1\", transform: `translateY(0)` }}\n                    >\n                      {location.pathname === \"/favourites\" && (\n                        <FavPageImageHoverContent\n                          onClick={() => {\n                            remove(hoveredImageId);\n                            activityLogger(item.image.id, \"Favourites\");\n                          }}\n                        />\n                      )}\n                      {location.pathname === \"/gallery\" && (\n                        <FavPageImageHoverContent\n                          onClick={() => {\n                            add({ image_id: hoveredImageId, sub_id: \"user\" });\n                          }}\n                        />\n                      )}\n                      {(location.pathname === \"/breeds-search-by-name\" ||\n                        location.pathname === \"/breeds\") && (\n                        <BreedsPageHoverContent breed={item.breeds[0]} />\n                      )}\n                    </Overlay>\n                  )}\n              </GalleryListItem>\n            ))}\n        </GalleryList>\n      )}\n\n      {removeLogs !== [] && location.pathname === \"/favourites\" && (\n        <Logger activities={removeLogs} text=\"was removed from\" />\n      )}\n    </>\n  );\n};\n\nexport default Gallery;\n","import styled from \"styled-components\";\n\nconst LogList = styled.ul`\n  margin-top: 52px;\n  list-style-type: none;\n  padding-left: 0px;\n`;\nconst LogListItem = styled.li`\n  padding: 15px;\n  display: flex;\n  align-items: flex-start;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  background-color: ${(props) => props.theme.lightGreyBgColor};\n  border-radius: 10px;\n\n  @media (min-width: 768px) {\n    align-items: center;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 18px 25px;\n  }\n`;\nconst Time = styled.span`\n  margin-right: 20px;\n  padding: 3px 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  background-color: white;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${(props) => props.theme.titleColor};\n`;\nconst Text = styled.span`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${(props) => props.theme.lightGrayTxtColor};\n`;\nconst Id = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${(props) => props.theme.titleColor};\n`;\nconst Icon = styled.svg`\n  margin-left: 5px;\n  @media (min-width: 768px) {\n    margin-left: auto;\n  }\n`;\n\nexport { LogList, LogListItem, Time, Text, Id, Icon };\n","import sprite from \"../../icons/sprite.svg\";\nimport { LogList, LogListItem, Time, Text, Id, Icon } from \"./Logger.styled\";\n\nexport const Logger = ({ activities, text }) => {\n  const icon = (type) => {\n    let href;\n    switch (type) {\n      case \"Likes\":\n        href = \"#icon-like-color-30\";\n        break;\n      case \"Favourites\":\n        href = \"#icon-Vector-348-Stroke\";\n        break;\n      case \"Dislike\":\n        href = \"#icon-dislike-color-30\";\n        break;\n\n      default:\n        href = null;\n    }\n    return href;\n  };\n\n  return (\n    <LogList>\n      {activities\n        .map((activity, i) => (\n          <LogListItem key={i}>\n            <Time>{activity.time}</Time>{\" \"}\n            <Text>\n              Image ID: <Id>{activity.imageId}</Id> {text} {activity.type}\n            </Text>\n            <Icon width=\"20\" height=\"20\">\n              <use href={sprite + icon(activity.type)} />\n            </Icon>\n          </LogListItem>\n        ))\n        .reverse()}\n    </LogList>\n  );\n};\n","import styled from \"styled-components\";\n\nconst BreedButton = styled.button`\n  width: 180px;\n  height: 34px;\n  margin-bottom: 10px;\n  margin-top: auto;\n  background-color: white;\n  border-color: transparent;\n  border-radius: 10px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  text-align: center;\n  color: ${(props) => props.theme.pink};\n  cursor: pointer;\n`;\n\nconst SelectsWrapper = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nconst InputsWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media (min-width: 768px) {\n    display: contents;\n  }\n`;\n\nconst FieldWrapper = styled.div`\n  position: relative;\n`;\n\nconst SelectField = styled.select`\n  appearance: none;\n  width: 100%;\n  height: 40px;\n  margin-bottom: 10px;\n  padding-left: 14px;\n  border-color: transparent;\n  border-radius: 10px;\n  background-color: ${(props) => props.theme.lightGreyBgColor};\n  color: ${(props) => props.theme.lightGrayTxtColor};\n  cursor: pointer;\n\n  &:focus,\n  &:active {\n    border-color: transparent;\n    outline: none;\n  }\n\n  &:hover {\n    box-shadow: 0px 0px 0px 2px ${(props) => props.theme.lightPink} inset;\n  }\n\n  @media (min-width: 768px) {\n    width: 226px;\n    margin-bottom: 0;\n  }\n`;\nconst LimitField = styled.select`\n  appearance: none;\n  width: 195px;\n  height: 40px;\n  padding-left: 14px;\n  border-color: transparent;\n  border-radius: 10px;\n  background-color: ${(props) => props.theme.lightGreyBgColor};\n  color: ${(props) => props.theme.lightGrayTxtColor};\n  cursor: pointer;\n\n  &:focus,\n  &:active {\n    border-color: transparent;\n    outline: none;\n  }\n  &:hover {\n    box-shadow: 0px 0px 0px 2px ${(props) => props.theme.lightPink} inset;\n  }\n\n  @media (min-width: 768px) {\n    width: 101px;\n  }\n`;\n\nconst SortButton = styled.button`\n  width: 40px;\n  height: 40px;\n  border-color: transparent;\n  border-radius: 10px;\n  background-color: ${(props) => props.theme.lightGreyBgColor};\n  cursor: pointer;\n  svg {\n    fill: ${(props) => props.theme.lightGrayTxtColor};\n  }\n\n  &:hover {\n    border: 2px solid ${(props) => props.theme.lightPink};\n\n    svg {\n      fill: ${(props) => props.theme.pink};\n    }\n  }\n`;\n\nexport {\n  BreedButton,\n  InputsWrap,\n  SelectsWrapper,\n  FieldWrapper,\n  SortButton,\n  SelectField,\n  LimitField,\n};\n","import { createPortal } from \"react-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Overlay,\n  ModalContainer,\n  ModalCloseButton,\n  ModalTitle,\n  PrivacyText,\n  PrivacyLink,\n  ImageContainer,\n  UploadText,\n  DragText,\n  ClickInput,\n  ClickLabel,\n  Image,\n  UploadButton,\n  Notification,\n  NotificationText,\n} from \"./Modal.styled\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport sprite from \"../../icons/sprite.svg\";\n\nconst Modal = ({ onClose }) => {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onClose);\n    return () => {\n      window.removeEventListener(\"keydown\", onClose);\n    };\n  });\n\n  axios.defaults.headers[\"x-api-key\"] = \"0b7504df-17ed-43ae-9368-17c81ca0668c\";\n\n  const modalRoot = document.querySelector(\"#modal-root\");\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [imageIsUploaded, setImageIsUploaded] = useState(false);\n  const [uploadingError, setUploadingError] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const handleUpload = () => {\n    setIsUploading(true);\n    axios\n      .post(\n        `https://api.thecatapi.com/v1/images/upload`,\n        {\n          file: uploadedImage,\n          sub_id: \"user\",\n        },\n        { headers: { \"Content-Type\": \"multipart/form-data\" } }\n      )\n      .then((res) => {\n        if (res.status === 201) {\n          setIsUploading(false);\n          setUploadingError(false);\n          setImageIsUploaded(true);\n          setUploadedImage(null);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsUploading(false);\n        setUploadingError(true);\n        setImageIsUploaded(false);\n        setUploadedImage(null);\n      });\n  };\n\n  return createPortal(\n    <Overlay onClick={(e) => onClose(e)}>\n      <ModalContainer>\n        <ModalCloseButton onClick={(e) => onClose(e)}>\n          <svg onClick={(e) => onClose(e)} width=\"20\" height=\"20\">\n            <use href={sprite + \"#icon-close-no-fill-20\"} />\n          </svg>\n        </ModalCloseButton>\n        <ModalTitle>Upload a .jpg or .png Cat Image</ModalTitle>\n        <PrivacyText>\n          Any uploads must comply with the{\" \"}\n          <PrivacyLink href=\"https://thecatapi.com/privacy\">\n            upload guidelines\n          </PrivacyLink>{\" \"}\n          or face deletion.\n        </PrivacyText>\n\n        <ImageContainer\n          id=\"drop_zone\"\n          onDrop={(e) => {\n            e.preventDefault();\n            setUploadedImage(e.dataTransfer.files[0]);\n          }}\n          onDragOver={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <UploadText>\n            <DragText>Drag here</DragText> your file or{\" \"}\n            <ClickInput\n              type=\"file\"\n              id=\"file\"\n              accept=\".png, .jpg, .jpeg, .gif\"\n              onChange={(e) => setUploadedImage(e.target.files[0])}\n            />\n            <ClickLabel htmlFor=\"file\">Click here </ClickLabel>\n            to upload\n          </UploadText>\n          {uploadedImage && (\n            <Image alt=\"cat\" src={URL.createObjectURL(uploadedImage)} />\n          )}\n        </ImageContainer>\n\n        {uploadedImage ? (\n          <>\n            <UploadText className=\"file\">\n              Image File Name: {uploadedImage.name}\n            </UploadText>\n            <UploadButton type=\"button\" onClick={handleUpload}>\n              {isUploading ? (\n                <ClipLoader color=\"white\" size=\"16px\" />\n              ) : (\n                \"upload foto\"\n              )}\n            </UploadButton>\n          </>\n        ) : (\n          <UploadText className=\"file\">No file selected</UploadText>\n        )}\n        {uploadingError && (\n          <Notification>\n            <svg width=\"20\" height=\"20\">\n              <use href={sprite + \"#icon-error-20\"} />\n            </svg>\n            <NotificationText>\n              No Cat found - try a different one\n            </NotificationText>\n          </Notification>\n        )}\n        {imageIsUploaded && (\n          <Notification>\n            <svg width=\"20\" height=\"20\">\n              <use href={sprite + \"#icon-success-20\"} />\n            </svg>\n            <NotificationText>\n              Thanks for the Upload - Cat found!\n            </NotificationText>\n          </Notification>\n        )}\n      </ModalContainer>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","export const orders = [\n  { value: \"RANDOM\", name: \"Random\" },\n  { value: \"DESC\", name: \"Desc\" },\n  { value: \"ASC\", name: \"Asc\" },\n];\n\nexport const types = [\"All\", \"Static\", \"Animated\"];\n\nexport const limits = [5, 10, 15, 20];\n","import { useEffect, useState } from \"react\";\nimport {\n  useGetAllBreedsQuery,\n  useGetAllImagesQuery,\n  useGetImagesForBreedQuery,\n  useGetUploadedImagesQuery,\n} from \"redux/catsApi\";\nimport SearchForm from \"components/SearchForm\";\nimport Gallery from \"components/Gallery\";\nimport Modal from \"components/Modal\";\nimport sprite from \"../../icons/sprite.svg\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport {\n  PagesWrapper,\n  PagesContentWrapper,\n  LoaderWrapper,\n} from \"../../constants/common-styles\";\nimport GoBackGroup from \"components/GoBackGroup\";\nimport {\n  Wrapper,\n  UploadButton,\n  Option,\n  OptionsSection,\n  OptionLabel,\n  OptionWrapper,\n  UpdateButton,\n  OptionSelect,\n  OptionSelectStylingWrapper,\n  DropdownIcon,\n} from \"./GalleryPage.styled\";\nimport { orders, types, limits } from \"./SelectOptions\";\n\nconst GalleryPage = () => {\n  const [breedsOptions, setBreedsOptions] = useState([]);\n  const [order, setOrder] = useState(\"RANDOM\");\n  const [type, setType] = useState(\"All\");\n  const [breed, setBreed] = useState(\"none\");\n  const [limit, setLimit] = useState(5);\n  const [imagesToRender, setImagesToRender] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    data: breeds,\n    isSuccess,\n    isLoading,\n    isFetching,\n  } = useGetAllBreedsQuery();\n  const {\n    data: imagesForOneBreed,\n    isSuccess: imagesForOneBreedFetched,\n    isLoading: loadingProcess,\n    isFetching: fetchingProcess,\n  } = useGetImagesForBreedQuery(\n    { id: breed, limit, order },\n    { skip: breed === \"none\" }\n  );\n  const {\n    data: allImages,\n    isSuccess: allImagesFetched,\n    isLoading: loading,\n    isFetching: fetching,\n  } = useGetAllImagesQuery(\n    {\n      order,\n      limit,\n    },\n    { skip: breed !== \"none\" }\n  );\n\n  const { data: userImage, isSuccess: userImageUploaded } =\n    useGetUploadedImagesQuery();\n\n  const sortByType = (images, type) => {\n    if (images) return images.filter((image) => image.url.endsWith(type));\n  };\n\n  useEffect(() => {\n    if (allImagesFetched && type === \"All\") setImagesToRender(allImages);\n    else if (type === \"Static\")\n      setImagesToRender(sortByType(allImages, \"jpg\" || \"png\"));\n    else if (type === \"Animated\")\n      setImagesToRender(sortByType(allImages, \"gif\"));\n  }, [type, allImagesFetched, allImages]);\n\n  useEffect(() => {\n    if (imagesForOneBreedFetched && breed !== \"none\" && type === \"All\") {\n      setImagesToRender(imagesForOneBreed);\n    } else if (breed !== \"none\" && type === \"Static\")\n      setImagesToRender(sortByType(imagesForOneBreed, \"jpg\" || \"png\"));\n    else if (breed !== \"none\" && type === \"Animated\")\n      setImagesToRender([] || sortByType(imagesForOneBreed, \"gif\"));\n  }, [imagesForOneBreed, imagesForOneBreedFetched, breed, type, limit]);\n\n  useEffect(() => {\n    if (userImageUploaded && userImage.length !== 0 && allImagesFetched) {\n      setImagesToRender((prevImages) => [\n        ...userImage,\n        ...prevImages.slice(0, -1),\n      ]);\n    }\n  }, [userImageUploaded, userImage, allImagesFetched]);\n\n  useEffect(() => {\n    if (breeds !== [] && isSuccess)\n      setBreedsOptions(\n        [{ id: \"none\", name: \"None\" }].concat(\n          breeds.map((breed) => ({ id: breed.id, name: breed.name }))\n        )\n      );\n  }, [breeds, isSuccess]);\n\n  return (\n    <PagesWrapper>\n      <SearchForm />\n      <PagesContentWrapper>\n        <Wrapper>\n          <GoBackGroup text=\"gallery\" />\n          <UploadButton onClick={() => setIsModalOpen(true)}>\n            <svg width=\"16\" height=\"16\" style={{ marginRight: \"10px\" }}>\n              <use href={sprite + \"#icon-upload-no-fill-16\"} />\n            </svg>\n            upload\n          </UploadButton>\n        </Wrapper>\n\n        {isModalOpen && (\n          <Modal\n            onClose={(e) => {\n              if (e.target === e.currentTarget || e.code === \"Escape\")\n                setIsModalOpen(false);\n            }}\n          />\n        )}\n\n        <OptionsSection>\n          <Option>\n            <OptionLabel htmlFor=\"orders\">Order</OptionLabel>\n            <OptionSelectStylingWrapper>\n              <OptionSelect\n                onChange={(e) => setOrder(e.target.value)}\n                id=\"orders\"\n              >\n                {orders.map((order, i) => (\n                  <option key={i} value={order.value}>\n                    {order.name}\n                  </option>\n                ))}\n              </OptionSelect>\n              <DropdownIcon width=\"12\" height=\"12\">\n                <use href={sprite + \"#icon-dropdown-12\"} />\n              </DropdownIcon>\n            </OptionSelectStylingWrapper>\n          </Option>\n\n          <Option>\n            <OptionLabel htmlFor=\"types\">Type</OptionLabel>\n            <OptionSelectStylingWrapper>\n              <OptionSelect\n                onChange={(e) => setType(e.target.value)}\n                id=\"types\"\n              >\n                {types.map((type, i) => (\n                  <option key={i} value={type}>\n                    {type}\n                  </option>\n                ))}\n              </OptionSelect>\n              <DropdownIcon width=\"12\" height=\"12\">\n                <use href={sprite + \"#icon-dropdown-12\"} />\n              </DropdownIcon>\n            </OptionSelectStylingWrapper>\n          </Option>\n\n          <Option>\n            <OptionLabel htmlFor=\"breeds\">Breed</OptionLabel>\n            <OptionSelectStylingWrapper>\n              <OptionSelect\n                onChange={(e) => setBreed(e.target.value)}\n                id=\"breeds\"\n              >\n                {breedsOptions.map((option) => (\n                  <option key={option.id} value={option.id} label={option.name}>\n                    {option.name}\n                  </option>\n                ))}\n              </OptionSelect>\n              <DropdownIcon width=\"12\" height=\"12\">\n                <use href={sprite + \"#icon-dropdown-12\"} />\n              </DropdownIcon>\n            </OptionSelectStylingWrapper>\n          </Option>\n\n          <Option>\n            <OptionLabel htmlFor=\"limits\">Limit</OptionLabel>\n            <OptionWrapper>\n              <OptionSelectStylingWrapper className=\"limit\">\n                <OptionSelect\n                  onChange={(e) => setLimit(e.target.value)}\n                  id=\"limits\"\n                >\n                  {limits.map((limit, i) => (\n                    <option key={i} value={limit}>\n                      {limit} items per page\n                    </option>\n                  ))}\n                </OptionSelect>\n                <DropdownIcon width=\"12\" height=\"12\">\n                  <use href={sprite + \"#icon-dropdown-12\"} />\n                </DropdownIcon>\n              </OptionSelectStylingWrapper>\n              <UpdateButton onClick={() => window.location.reload(false)}>\n                <svg width=\"17\" height=\"20\">\n                  <use href={sprite + \"#icon-update-20\"} />\n                </svg>\n              </UpdateButton>\n            </OptionWrapper>\n          </Option>\n        </OptionsSection>\n        {isLoading ||\n        loading ||\n        isFetching ||\n        fetching ||\n        loadingProcess ||\n        fetchingProcess ? (\n          <LoaderWrapper>\n            <ClipLoader color=\"#FF868E\" size=\"100px\" />\n          </LoaderWrapper>\n        ) : (\n          <Gallery items={imagesToRender} />\n        )}\n      </PagesContentWrapper>\n    </PagesWrapper>\n  );\n};\n\nexport default GalleryPage;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: contents;\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n`;\n\nconst UploadButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 40px;\n  margin-bottom: 10px;\n  border-radius: 10px;\n  border-color: transparent;\n  background-color: ${(props) => props.theme.lightPink};\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.3;\n  text-align: center;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  color: ${(props) => props.theme.pink};\n  cursor: pointer;\n  svg {\n    fill: ${(props) => props.theme.pink};\n  }\n\n  &:hover {\n    background-color: ${(props) => props.theme.pink};\n    color: white;\n    svg {\n      fill: white;\n    }\n  }\n\n  @media (min-width: 768px) {\n    width: 143px;\n    margin-bottom: 0;\n  }\n`;\n\nconst OptionsSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 10px;\n  margin-bottom: 20px;\n  border-radius: 20px;\n  background-color: ${(props) => props.theme.lightGreyBgColor};\n  @media (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 10px 20px;\n  }\n`;\n\nconst OptionLabel = styled.label`\n  display: block;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.8;\n  text-transform: uppercase;\n  color: ${(props) => props.theme.lightGrayTxtColor};\n`;\n\nconst OptionWrapper = styled.div`\n  display: contents;\n  @media (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nconst Option = styled.div`\n  width: 100%;\n  @media (min-width: 768px) {\n    width: 290px;\n  }\n`;\n\nconst OptionSelect = styled.select`\n  appearance: none;\n  background-color: transparent;\n  color: ${(props) => props.theme.lightGrayTxtColor};\n  border: none;\n  padding: 0 1em 0 0;\n  margin: 0;\n  width: 100%;\n  font-family: inherit;\n  font-size: inherit;\n  cursor: inherit;\n  line-height: inherit;\n  outline: none;\n`;\n\nconst OptionSelectStylingWrapper = styled.div`\n  position: relative;\n\n  margin-bottom: 10px;\n  border-radius: 10px;\n  padding: 8px 10px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${(props) => props.theme.titleColor};\n  cursor: pointer;\n  background-color: white;\n\n  &:hover {\n    box-shadow: 0px 0px 0px 2px ${(props) => props.theme.lightPink} inset;\n  }\n\n  &.limit {\n    width: 100%;\n    @media (min-width: 768px) {\n      width: 240px;\n    }\n  }\n`;\n\nconst DropdownIcon = styled.svg`\n  position: absolute;\n  right: 10px;\n  top: 15px;\n`;\n\nconst UpdateButton = styled.button`\n  width: 100%;\n  height: 40px;\n\n  border-radius: 10px;\n  border-color: transparent;\n  background-color: white;\n  cursor: pointer;\n  svg {\n    fill: ${(props) => props.theme.pink};\n  }\n\n  &:hover {\n    background-color: ${(props) => props.theme.pink};\n    svg {\n      fill: white;\n    }\n  }\n\n  @media (min-width: 768px) {\n    width: 40px;\n    margin-left: 10px;\n  }\n`;\n\nexport {\n  Wrapper,\n  UploadButton,\n  Option,\n  OptionLabel,\n  OptionWrapper,\n  UpdateButton,\n  OptionSelect,\n  OptionSelectStylingWrapper,\n  OptionsSection,\n  DropdownIcon,\n};\n"],"names":["DeleteFavouriteButton","styled","onClick","useState","isHovered","setIsHovered","onMouseEnter","onMouseLeave","width","height","href","sprite","breed","navigate","useNavigate","localStorage","setItem","JSON","stringify","name","columnStyle","index","rowStyle","GalleryList","GalleryListItem","ListItemImage","Overlay","Notification","props","theme","lightGreyBgColor","NotificationText","lightGrayTxtColor","items","location","useLocation","useDeleteFromFavouritesMutation","remove","useAddToFavouritesMutation","add","hovered","setHovered","hoveredImageId","setHoveredImageId","parse","window","getItem","removeLogs","setRemoveLogs","isDesktop","useMediaQuery","useEffect","length","clear","map","item","style","gridColumn","gridRow","src","url","image","alt","onMouseOver","id","pathname","opacity","transform","type","date","Date","toTimeString","slice","prevState","imageId","time","activityLogger","image_id","sub_id","breeds","Logger","activities","text","LogList","LogListItem","Time","titleColor","Text","Id","Icon","icon","activity","i","reverse","BreedButton","pink","SelectsWrapper","InputsWrap","FieldWrapper","SelectField","lightPink","LimitField","SortButton","onClose","addEventListener","removeEventListener","axios","modalRoot","document","querySelector","uploadedImage","setUploadedImage","imageIsUploaded","setImageIsUploaded","uploadingError","setUploadingError","isUploading","setIsUploading","createPortal","e","onDrop","preventDefault","dataTransfer","files","onDragOver","accept","onChange","target","htmlFor","URL","createObjectURL","className","file","headers","then","res","status","catch","error","console","log","color","size","orders","value","types","limits","breedsOptions","setBreedsOptions","order","setOrder","setType","setBreed","limit","setLimit","imagesToRender","setImagesToRender","isModalOpen","setIsModalOpen","useGetAllBreedsQuery","data","isSuccess","isLoading","isFetching","useGetImagesForBreedQuery","skip","imagesForOneBreed","imagesForOneBreedFetched","loadingProcess","fetchingProcess","useGetAllImagesQuery","allImages","allImagesFetched","loading","fetching","useGetUploadedImagesQuery","userImage","userImageUploaded","sortByType","images","filter","endsWith","prevImages","concat","SearchForm","GoBackGroup","marginRight","currentTarget","code","option","label","reload","Gallery","Wrapper","UploadButton","OptionsSection","OptionLabel","OptionWrapper","Option","OptionSelect","OptionSelectStylingWrapper","DropdownIcon","UpdateButton"],"sourceRoot":""}